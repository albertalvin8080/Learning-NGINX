limit_req_zone $binary_remote_addr # IP of the client
    zone=limitByAddressZone:10m # megabytes
    rate=1r/s; # requests per second

limit_req_status 429; # Http code for `too many requests`

upstream backend {
    server web:8080;
}

server {
    listen 80 default_server;
    return 444;
}

server {
    listen 80;
    server_name main.com;

    # You may also put a `limit_req` inside each `location` block.
    # limit_req zone=limitByAddressZone;
    # limit_req zone=limitByAddressZone burst=5 delay=2; # delays only 2 of 5 responses for `burst=5` and `delay=2`.
    # limit_req zone=limitByAddressZone burst=5 nodelay;

    location / {
        proxy_pass http://backend/;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;

        limit_req zone=limitByAddressZone burst=5 nodelay;
    }

    location /static/ {
        alias /app/resources/static/;
    }

    # Directly mapping the login page for testing purposes.
    location /login {
        # The final URL will be `http://backend/login` becase there's no trailing slash here.
        proxy_pass http://backend;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;

        # Remember to add `burst` if NGINX immediately sends a 429 after each user/pwd error in the form.
        limit_req zone=limitByAddressZone burst=5 nodelay;
    }

}